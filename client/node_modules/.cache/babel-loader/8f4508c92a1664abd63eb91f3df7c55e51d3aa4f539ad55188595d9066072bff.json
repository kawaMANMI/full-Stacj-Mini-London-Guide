{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mega\\\\CYF\\\\week24_07-2023\\\\During_Session_preparation\\\\challenge-london-mini-guide\\\\client\\\\src\\\\components\\\\RadioCities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { DropdownButton } from \"react-bootstrap\";\nimport Card from 'react-bootstrap/Card';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RadioCities() {\n  _s();\n  const [citiesList, setCitiesList] = useState([]);\n  const [selectCity, setSelectCityt] = useState(\"Dropdown button\");\n  const [categoryCity, setCategoryCity] = useState([]);\n  const [selectedCategory, setselectedCategory] = useState(\"\");\n  const [CategoryList, setCategoryList] = useState([]);\n  useEffect(() => {\n    async function fetchMyAPI1() {\n      let response = await fetch(\"https://mini-london-guide-fullstack-challange.onrender.com/citiesName\");\n      response = await response.json();\n      setCitiesList(response);\n    }\n    fetchMyAPI1().catch(console.error);\n  }, []);\n  function change(e) {\n    // a.persist();\n    //  console.log(`you chosen: ${e}`);\n    setSelectCityt(e);\n  }\n  useEffect(() => {\n    async function fetchMyAPI2() {\n      let response = await fetch(`https://mini-london-guide-fullstack-challange.onrender.com/${selectCity}`);\n      response = await response.json();\n      setCategoryCity(response);\n    }\n    fetchMyAPI2().catch(console.error);\n  }, [selectCity]);\n\n  //component for Crads for selected catgories\n  const CardSelectedCategory = () => {\n    // useEffect(() => {\n    //   async function fetchMyAPI3() {\n    //     let response = await fetch(\n    //       `https://mini-london-guide-fullstack-challange.onrender.com/${selectCity}/${selectedCategory}`\n    //     );\n    //     response = await response.json();\n    //     setCategoryList(response);\n    //     console.log(CategoryList)\n    //   }\n\n    //   fetchMyAPI3().catch(console.error);\n    // }, [selectCity]);\n\n    const harrow = require(\"./data/Harrow.json\");\n    const heathrow = require(\"./data/Heathrow.json\");\n    const stratford = require(\"./data/Stratford.json\");\n    const combinedData = {\n      harrow: harrow,\n      heathrow: heathrow,\n      stratford: stratford\n    };\n    setCategoryList(combinedData[selectCity][selectedCategory]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conatinerCard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: CategoryList.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"col-lg-4 col-md-6 mb-5 mb-lg-2 m-3\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: card.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Phone: \", card.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n            href: card.website,\n            children: \"Website\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: selectCity,\n      onSelect: change,\n      children: citiesList.map((city, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: city,\n        children: city\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), categoryCity.length > 0 ? /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 34\n    }, this) : null, selectCity !== \"\" && selectedCategory !== \"\" ? /*#__PURE__*/_jsxDEV(CardSelectedCategory, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 54\n    }, this) : null]\n  }, void 0, true);\n}\n_s(RadioCities, \"hT92BCZKvn0u2UIbnDoqoY0IfkM=\");\n_c = RadioCities;\nvar _c;\n$RefreshReg$(_c, \"RadioCities\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","DropdownButton","Card","RadioCities","citiesList","setCitiesList","selectCity","setSelectCityt","categoryCity","setCategoryCity","selectedCategory","setselectedCategory","CategoryList","setCategoryList","fetchMyAPI1","response","fetch","json","catch","console","error","change","e","fetchMyAPI2","CardSelectedCategory","harrow","require","heathrow","stratford","combinedData","map","card","name","address","phone","website","city","index","length"],"sources":["D:/Mega/CYF/week24_07-2023/During_Session_preparation/challenge-london-mini-guide/client/src/components/RadioCities.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { DropdownButton } from \"react-bootstrap\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../App.css';\r\n\r\nexport default function RadioCities() {\r\n  const [citiesList, setCitiesList] = useState([]);\r\n  const [selectCity, setSelectCityt] = useState(\"Dropdown button\");\r\n  const [categoryCity, setCategoryCity] = useState([]);\r\n  const [selectedCategory, setselectedCategory] = useState(\"\");\r\n  const [CategoryList, setCategoryList] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchMyAPI1() {\r\n      let response = await fetch(\r\n        \"https://mini-london-guide-fullstack-challange.onrender.com/citiesName\"\r\n      );\r\n      response = await response.json();\r\n      setCitiesList(response);\r\n    }\r\n\r\n    fetchMyAPI1().catch(console.error);\r\n  }, []);\r\n\r\n  function change(e) {\r\n    // a.persist();\r\n    //  console.log(`you chosen: ${e}`);\r\n    setSelectCityt(e);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchMyAPI2() {\r\n      let response = await fetch(\r\n        `https://mini-london-guide-fullstack-challange.onrender.com/${selectCity}`\r\n      );\r\n      response = await response.json();\r\n      setCategoryCity(response);\r\n    }\r\n\r\n    fetchMyAPI2().catch(console.error);\r\n  }, [selectCity]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //component for Crads for selected catgories\r\n   const CardSelectedCategory=()=>{\r\n    \r\n    // useEffect(() => {\r\n    //   async function fetchMyAPI3() {\r\n    //     let response = await fetch(\r\n    //       `https://mini-london-guide-fullstack-challange.onrender.com/${selectCity}/${selectedCategory}`\r\n    //     );\r\n    //     response = await response.json();\r\n    //     setCategoryList(response);\r\n    //     console.log(CategoryList)\r\n    //   }\r\n  \r\n    //   fetchMyAPI3().catch(console.error);\r\n    // }, [selectCity]);\r\n\r\n    const harrow = require(\"./data/Harrow.json\");\r\n    const heathrow = require(\"./data/Heathrow.json\");\r\n    const stratford = require(\"./data/Stratford.json\");\r\n    const combinedData = {\r\n      harrow: harrow,\r\n      heathrow: heathrow,\r\n      stratford: stratford,\r\n    };\r\n    setCategoryList( combinedData[selectCity][selectedCategory])\r\n\r\n    return(\r\n      <div className=\"conatinerCard\">\r\n        <div className=\"row\"> \r\n{CategoryList.map( card => (\r\n<Card className=\"col-lg-4 col-md-6 mb-5 mb-lg-2 m-3\"> \r\n        <Card.Title>{card.name}</Card.Title>\r\n        <hr/>\r\n        <Card.Text>\r\n          {card.address}\r\n        </Card.Text>\r\n        <Card.Text>Phone: {card.phone}</Card.Text>\r\n        <Card.Link href={card.website}>Website</Card.Link>\r\n    </Card>\r\n      ))}\r\n      </div>\r\n      </div>\r\n    )\r\n     }\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n        id=\"dropdown-basic-button\"\r\n        title={selectCity}\r\n        onSelect={change}\r\n      >\r\n        {citiesList.map((city, index) => (\r\n          <Dropdown.Item eventKey={city} key={index}>\r\n            {city}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      {categoryCity.length > 0 ? <Category /> : null}\r\n      { (selectCity!==\"\" && selectedCategory!==\"\")?  <CardSelectedCategory/>: null}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}