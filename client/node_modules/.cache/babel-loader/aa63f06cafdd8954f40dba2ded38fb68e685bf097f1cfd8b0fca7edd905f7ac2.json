{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mega\\\\CYF\\\\week24_07-2023\\\\During_Session_preparation\\\\challenge-london-mini-guide\\\\client\\\\src\\\\components\\\\RadioCities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { DropdownButton } from \"react-bootstrap\";\nimport Category from \"./Category\";\nimport Cards from \"./Cards\";\nimport \"../App.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RadioCities() {\n  _s();\n  const [citiesList, setCitiesList] = useState([]);\n  const [selectCity, setSelectCity] = useState(\"Select City\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  useEffect(() => {\n    async function fetchMyAPI1() {\n      let response = await fetch(\"https://mini-london-guide-fullstack-challange.onrender.com/citiesName\");\n      response = await response.json();\n      setCitiesList(response);\n    }\n    fetchMyAPI1().catch(console.error);\n  }, []);\n  function change(e) {\n    // a.persist();\n    // console.log(`you chosen: ${e}`);\n    setSelectCity(e);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: selectCity,\n      onSelect: change,\n      children: citiesList.map((city, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        eventKey: city,\n        children: city\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), selectCity !== \"Select City\" ? /*#__PURE__*/_jsxDEV(Category, {\n      selectCity: selectCity,\n      setSelectedCategory: setSelectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : null, selectedCategory ? /*#__PURE__*/_jsxDEV(Cards, {\n      selectCity: selectCity,\n      selectedCategory: selectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n// { (selectCity!==\"\" && selectedCategory!==\"\")?  <CardSelectedCategory/>: null} */}\n_s(RadioCities, \"+3nhasXpeXVHLhNZ6rm/9os1E7k=\");\n_c = RadioCities;\nvar _c;\n$RefreshReg$(_c, \"RadioCities\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","DropdownButton","Category","Cards","RadioCities","citiesList","setCitiesList","selectCity","setSelectCity","selectedCategory","setSelectedCategory","fetchMyAPI1","response","fetch","json","catch","console","error","change","e","map","city","index"],"sources":["D:/Mega/CYF/week24_07-2023/During_Session_preparation/challenge-london-mini-guide/client/src/components/RadioCities.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { DropdownButton } from \"react-bootstrap\";\r\nimport Category from \"./Category\";\r\nimport Cards from \"./Cards\";\r\nimport \"../App.css\";\r\n\r\nexport default function RadioCities() {\r\n  const [citiesList, setCitiesList] = useState([]);\r\n  const [selectCity, setSelectCity] = useState(\"Select City\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  useEffect(() => {\r\n    async function fetchMyAPI1() {\r\n      let response = await fetch(\r\n        \"https://mini-london-guide-fullstack-challange.onrender.com/citiesName\"\r\n      );\r\n      response = await response.json();\r\n      setCitiesList(response);\r\n    }\r\n\r\n    fetchMyAPI1().catch(console.error);\r\n  }, []);\r\n\r\n  function change(e) {\r\n    // a.persist();\r\n    // console.log(`you chosen: ${e}`);\r\n    setSelectCity(e);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n        id=\"dropdown-basic-button\"\r\n        title={selectCity}\r\n        onSelect={change}\r\n      >\r\n        {citiesList.map((city, index) => (\r\n          <Dropdown.Item eventKey={city} key={index}>\r\n            {city}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      {selectCity !== \"Select City\" ? (\r\n        <Category\r\n          selectCity={selectCity}\r\n          setSelectedCategory={setSelectedCategory}\r\n        />\r\n      ) : null}\r\n      {selectedCategory ? (\r\n        <Cards selectCity={selectCity} selectedCategory={selectedCategory} />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\n// { (selectCity!==\"\" && selectedCategory!==\"\")?  <CardSelectedCategory/>: null} */}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,YAAY;AAAC;AAAA;AAEpB,eAAe,SAASC,WAAW,GAAG;EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,aAAa,CAAC;EAC3D,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5DC,SAAS,CAAC,MAAM;IACd,eAAeY,WAAW,GAAG;MAC3B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,uEAAuE,CACxE;MACDD,QAAQ,GAAG,MAAMA,QAAQ,CAACE,IAAI,EAAE;MAChCR,aAAa,CAACM,QAAQ,CAAC;IACzB;IAEAD,WAAW,EAAE,CAACI,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,MAAM,CAACC,CAAC,EAAE;IACjB;IACA;IACAX,aAAa,CAACW,CAAC,CAAC;EAClB;EAEA,oBACE;IAAA,wBACE,QAAC,cAAc;MACb,EAAE,EAAC,uBAAuB;MAC1B,KAAK,EAAEZ,UAAW;MAClB,QAAQ,EAAEW,MAAO;MAAA,UAEhBb,UAAU,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1B,QAAC,QAAQ,CAAC,IAAI;QAAC,QAAQ,EAAED,IAAK;QAAA,UAC3BA;MAAI,GAD6BC,KAAK;QAAA;QAAA;QAAA;MAAA,QAG1C;IAAC;MAAA;MAAA;MAAA;IAAA,QACa,EAChBf,UAAU,KAAK,aAAa,gBAC3B,QAAC,QAAQ;MACP,UAAU,EAAEA,UAAW;MACvB,mBAAmB,EAAEG;IAAoB;MAAA;MAAA;MAAA;IAAA,QACzC,GACA,IAAI,EACPD,gBAAgB,gBACf,QAAC,KAAK;MAAC,UAAU,EAAEF,UAAW;MAAC,gBAAgB,EAAEE;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,GACnE,IAAI;EAAA,gBACP;AAEP;;AAEA;AAAA,GAhDwBL,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}